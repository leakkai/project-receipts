package com.rp.controller;

import java.text.ParseException;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.rp.model.AddressReq;
import com.rp.model.RequestClass;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/receipt/") // This means URL's start with /user (after Application path)
public class ReceiptHeaderController {

	@Autowired// This means to let Spring auto create the bean
    // Which is auto-generated by Spring, we will use it to handle the data
	ReceiptHeaderSvc rhSvc;
	
	@Autowired
	AddressSvc addSvc;
	
    @GetMapping("")
    public String simpleView(Model model) {
    	model.addAttribute("request", new RequestClass());
    	return "/receipt/home";
    }
    
	@PostMapping("process")
    public String processTransaction(@Valid RequestClass request, BindingResult bindingResult, Model model) throws ParseException {

		try {
	        if (bindingResult.hasErrors()) {
	            return "rh";
	        }        
	        
	        rhSvc.processTransaction(request);
	        
	        return this.simpleView(model);
		}
		catch (Exception e) {
			//add error later
			return this.simpleView(model); 
		}
    }
	
	
	@GetMapping("getAddress")
    public @ResponseBody RequestClass getAddress(@Valid RequestClass request, BindingResult bindingResult, Model model) throws ParseException {

		try {
			if (bindingResult.hasErrors()) {
				//add error later
			}

			return addSvc.getAddress(request);
		}
		catch (Exception e) {
			//add error later
			return null;
		}
    }	
	
	@RequestMapping(value = "addAddress", produces = "application/json", method = RequestMethod.POST)
    public @ResponseBody String addAddress(@RequestBody AddressReq request) {

		String response = null;
		try {
			response = addSvc.addAddress(request);
		}
		catch (Exception e) {
			response = "{\"status\":\"" + e.getMessage() + "\"}";
		}
		return response;
    }

}