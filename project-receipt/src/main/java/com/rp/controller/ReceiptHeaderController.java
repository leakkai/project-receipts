package com.rp.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.rp.model.AddressReq;
import com.rp.model.RequestClass;

import ResponseHolder.ResponseHolder;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/receipt/") // This means URL's start with /receipt (after Application path)
public class ReceiptHeaderController extends BaseController {

	@Autowired// This means to let Spring auto create the bean
    // Which is auto-generated by Spring, we will use it to handle the data
	ReceiptHeaderSvc rhSvc;
	
	@Autowired
	AddressSvc addSvc;
	
	@Autowired
	CommoviceSvc cmSvc;
	
    @GetMapping("")
    public String simpleView(Model model) {
    	model.addAttribute("request", new RequestClass());
    	return "/receipt/home";
    }
	
	@RequestMapping(value = "process", produces = "application/json", method = RequestMethod.POST)
	@ResponseBody
    public ResponseHolder processTransaction(@RequestBody RequestClass request) {
		
		try {
			String e = rhSvc.processTransaction(request);
			return this.buildResponse(e);
		}
		catch (RuntimeException e) {
			return this.buildResponse(e.getMessage());
		}
    }

	@RequestMapping(value = "getAddress/{storeName}", produces = "application/json", method = RequestMethod.GET)
	@ResponseBody
    public ResponseHolder getAddress(@PathVariable("storeName") String storeName) {
		
		try {
			return this.buildResponse(addSvc.getAddress(storeName));
		}
		catch (RuntimeException e) {
			return this.buildResponse(e.getMessage());
		}
    }	
	
	@RequestMapping(value = "addAddress", produces = "application/json", method = RequestMethod.POST)
	@ResponseBody
    public ResponseHolder addAddress(@RequestBody AddressReq request) {

		try {
			addSvc.addAddress(request);
			return this.buildResponse("");
		}
		catch (Exception e) {
			return this.buildResponse(e.getMessage());
		}
    }
	
	@RequestMapping(value = "getItems/{storeName}", produces = "application/json", method = RequestMethod.GET)
	@ResponseBody
	public ResponseHolder getItems(@PathVariable("storeName") String storeName) {
		try {
			return this.buildResponse(cmSvc.getItems(storeName));
		}
		catch (RuntimeException e) {
			return this.buildResponse(e.getMessage());
		}
	}
}